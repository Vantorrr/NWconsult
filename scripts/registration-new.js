// Registration page functionality
(function() {
  // Countries data with proper structure
  const countriesData = [
    { 
      id: 'cyprus',
      name: '–ö–∏–ø—Ä',
      flag: 'üá®üáæ',
      region: 'europe',
      time: '7-10 –¥–Ω–µ–π',
      price: 2500,
      priceText: '$2,500',
      features: ['EU –∫–æ–º–ø–∞–Ω–∏—è', '–ù–∏–∑–∫–∏–µ –Ω–∞–ª–æ–≥–∏', '–ü—Ä–µ—Å—Ç–∏–∂']
    },
    { 
      id: 'uk',
      name: '–í–µ–ª–∏–∫–æ–±—Ä–∏—Ç–∞–Ω–∏—è',
      flag: 'üá¨üáß',
      region: 'europe',
      time: '3-5 –¥–Ω–µ–π',
      price: 1500,
      priceText: '$1,500',
      features: ['–ë—ã—Å—Ç—Ä–∞—è —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è', '–ú–∏—Ä–æ–≤–æ–π –ø—Ä–µ—Å—Ç–∏–∂', '–ë–∞–Ω–∫–∏']
    },
    { 
      id: 'estonia',
      name: '–≠—Å—Ç–æ–Ω–∏—è',
      flag: 'üá™üá™',
      region: 'europe',
      time: '1-3 –¥–Ω—è',
      price: 1200,
      priceText: '$1,200',
      features: ['E-Residency', '–û–Ω–ª–∞–π–Ω —É–ø—Ä–∞–≤–ª–µ–Ω–∏–µ', 'EU –∫–æ–º–ø–∞–Ω–∏—è']
    },
    { 
      id: 'singapore',
      name: '–°–∏–Ω–≥–∞–ø—É—Ä',
      flag: 'üá∏üá¨',
      region: 'asia',
      time: '5-7 –¥–Ω–µ–π',
      price: 3000,
      priceText: '$3,000',
      features: ['–ê–∑–∏–∞—Ç—Å–∫–∏–π —Ö–∞–±', '–°—Ç–∞–±–∏–ª—å–Ω–æ—Å—Ç—å', '–ë–∞–Ω–∫–∏']
    },
    { 
      id: 'hongkong',
      name: '–ì–æ–Ω–∫–æ–Ω–≥',
      flag: 'üá≠üá∞',
      region: 'asia',
      time: '7-14 –¥–Ω–µ–π',
      price: 3500,
      priceText: '$3,500',
      features: ['–î–æ—Å—Ç—É–ø –∫ –ö–∏—Ç–∞—é', '–ù–∏–∑–∫–∏–µ –Ω–∞–ª–æ–≥–∏', '–ü—Ä–µ—Å—Ç–∏–∂']
    },
    { 
      id: 'uae',
      name: '–û–ê–≠',
      flag: 'üá¶üá™',
      region: 'asia',
      time: '7-10 –¥–Ω–µ–π',
      price: 4000,
      priceText: '$4,000',
      features: ['0% –Ω–∞–ª–æ–≥–æ–≤', '–†–µ–∑–∏–¥–µ–Ω—Ç—Å–∫–∞—è –≤–∏–∑–∞', '–ë–∞–Ω–∫–∏']
    },
    { 
      id: 'usa',
      name: '–°–®–ê (Delaware)',
      flag: 'üá∫üá∏',
      region: 'america',
      time: '1-2 –¥–Ω—è',
      price: 1000,
      priceText: '$1,000',
      features: ['–ë—ã—Å—Ç—Ä–æ', '–ê–Ω–æ–Ω–∏–º–Ω–æ—Å—Ç—å', '–ì–∏–±–∫–æ—Å—Ç—å']
    },
    { 
      id: 'marshall',
      name: '–ú–∞—Ä—à–∞–ª–ª–æ–≤—ã –æ—Å—Ç—Ä–æ–≤–∞',
      flag: 'üá≤üá≠',
      region: 'offshore',
      time: '3-5 –¥–Ω–µ–π',
      price: 1800,
      priceText: '$1,800',
      features: ['–û—Ñ—Ñ—à–æ—Ä', '–ö–æ–Ω—Ñ–∏–¥–µ–Ω—Ü–∏–∞–ª—å–Ω–æ—Å—Ç—å', '0% –Ω–∞–ª–æ–≥–æ–≤']
    },
    { 
      id: 'bvi',
      name: '–ë—Ä–∏—Ç–∞–Ω—Å–∫–∏–µ –í–∏—Ä–≥–∏–Ω—Å–∫–∏–µ –æ—Å—Ç—Ä–æ–≤–∞',
      flag: 'üáªüá¨',
      region: 'offshore',
      time: '5-7 –¥–Ω–µ–π',
      price: 2200,
      priceText: '$2,200',
      features: ['–ö–ª–∞—Å—Å–∏—á–µ—Å–∫–∏–π –æ—Ñ—Ñ—à–æ—Ä', '–ö–æ–Ω—Ñ–∏–¥–µ–Ω—Ü–∏–∞–ª—å–Ω–æ—Å—Ç—å', '–ì–∏–±–∫–æ—Å—Ç—å']
    },
    { 
      id: 'seychelles',
      name: '–°–µ–π—à–µ–ª—å—Å–∫–∏–µ –æ—Å—Ç—Ä–æ–≤–∞',
      flag: 'üá∏üá®',
      region: 'offshore',
      time: '1-2 –¥–Ω—è',
      price: 1500,
      priceText: '$1,500',
      features: ['–ë—ã—Å—Ç—Ä–∞—è —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è', '0% –Ω–∞–ª–æ–≥–æ–≤', '–ü—Ä–æ—Å—Ç–æ—Ç–∞']
    },
    { 
      id: 'malta',
      name: '–ú–∞–ª—å—Ç–∞',
      flag: 'üá≤üáπ',
      region: 'europe',
      time: '10-14 –¥–Ω–µ–π',
      price: 5000,
      priceText: '$5,000',
      features: ['EU –∫–æ–º–ø–∞–Ω–∏—è', '–ò–≥–æ—Ä–Ω—ã–π –±–∏–∑–Ω–µ—Å', '–ö—Ä–∏–ø—Ç–æ']
    },
    { 
      id: 'switzerland',
      name: '–®–≤–µ–π—Ü–∞—Ä–∏—è',
      flag: 'üá®üá≠',
      region: 'europe',
      time: '14-21 –¥–µ–Ω—å',
      price: 7500,
      priceText: '$7,500',
      features: ['–ú–∞–∫—Å–∏–º–∞–ª—å–Ω—ã–π –ø—Ä–µ—Å—Ç–∏–∂', '–ë–∞–Ω–∫–∏', '–°—Ç–∞–±–∏–ª—å–Ω–æ—Å—Ç—å']
    }
  ];

  // Get countries data from localStorage or use default
  let countries = JSON.parse(localStorage.getItem('registrationCountries')) || countriesData;
  
  // DOM elements
  const countriesGrid = document.getElementById('countries-grid');
  const searchInput = document.getElementById('country-search');
  const regionFilter = document.getElementById('region-filter');
  const priceFilter = document.getElementById('price-filter');
  const resetBtn = document.getElementById('reset-filters');

  // Render countries
  function renderCountries(data = countries) {
    if (!countriesGrid) return;
    
    countriesGrid.innerHTML = data.map((country, index) => `
      <div class="country-card" data-country-id="${country.id}" style="animation-delay: ${index * 0.1}s">
        <div class="country-flag">${country.flag}</div>
        <h3 class="country-name">${country.name}</h3>
        
        <div class="country-info">
          <div class="country-info-item">
            <span class="country-info-label">–°—Ä–æ–∫ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏:</span>
            <span class="country-info-value">${country.time}</span>
          </div>
          ${country.features ? `
            <div class="country-info-item">
              <span class="country-info-label">–ü—Ä–µ–∏–º—É—â–µ—Å—Ç–≤–∞:</span>
            </div>
            <ul style="margin: 8px 0 0 0; padding-left: 20px; color: rgba(255,255,255,0.8); font-size: 14px;">
              ${country.features.map(f => `<li>${f}</li>`).join('')}
            </ul>
          ` : ''}
        </div>
        
        <div class="country-price">–æ—Ç ${country.priceText}</div>
        
        <button class="country-cta" onclick="window.location.href='./kontakty.html#form'">
          –ó–∞–∫–∞–∑–∞—Ç—å —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—é
        </button>
      </div>
    `).join('');
  }

  // Filter countries
  function filterCountries() {
    let filtered = [...countries];
    
    // Search filter
    const searchTerm = searchInput?.value.toLowerCase() || '';
    if (searchTerm) {
      filtered = filtered.filter(c => 
        c.name.toLowerCase().includes(searchTerm)
      );
    }
    
    // Region filter
    const region = regionFilter?.value || '';
    if (region) {
      filtered = filtered.filter(c => c.region === region);
    }
    
    // Price filter
    const priceRange = priceFilter?.value || '';
    if (priceRange) {
      if (priceRange === '0-1000') {
        filtered = filtered.filter(c => c.price <= 1000);
      } else if (priceRange === '1000-3000') {
        filtered = filtered.filter(c => c.price > 1000 && c.price <= 3000);
      } else if (priceRange === '3000+') {
        filtered = filtered.filter(c => c.price > 3000);
      }
    }
    
    renderCountries(filtered);
  }

  // Event listeners
  searchInput?.addEventListener('input', filterCountries);
  regionFilter?.addEventListener('change', filterCountries);
  priceFilter?.addEventListener('change', filterCountries);
  
  resetBtn?.addEventListener('click', () => {
    if (searchInput) searchInput.value = '';
    if (regionFilter) regionFilter.value = '';
    if (priceFilter) priceFilter.value = '';
    renderCountries();
  });

  // Initial render
  renderCountries();
  
  // Export function for admin panel
  window.getRegistrationCountries = () => countries;
  window.setRegistrationCountries = (newCountries) => {
    countries = newCountries;
    localStorage.setItem('registrationCountries', JSON.stringify(countries));
    renderCountries();
  };
})();
